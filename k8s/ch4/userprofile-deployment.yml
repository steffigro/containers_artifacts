# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile-deployment # RENAME
  namespace: api
spec:
  selector: # Define the wrapping strategy
    matchLabels: # Match all pods with the defined labels
      app: userprofile-api # Labels follow the `name: value` template
  template: # This is the template of the pod inside the deployment
    metadata:
      labels:
        app: userprofile-api # RENAME
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - image: registrykcu5316.azurecr.io/tripinsights/userprofile:1.0 # RENAME
          name: userprofile # RENAME
          volumeMounts:
            - name: secrets-store01-inline
              mountPath: "/secrets"
              readOnly: true
          env:
            # - name: SQL_USER
              # valueFrom:
              #   secretKeyRef:
              #     name: sql-secrets
              #     key: username
            - name: SQL_SERVER
              value: sqlserverkcu5316.database.windows.net
            # - name: SQL_PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: sql-secrets
            #       key: password
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 80
              name: http
      volumes:
        - name: secrets-store01-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: "azure-tripviewer-smi"
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile-service # RENAME
  namespace: api
spec:
  type: ClusterIP
  ports:
  - port: 80
  selector:
    app: userprofile-api # RENAME