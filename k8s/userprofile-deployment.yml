# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userprofile-deployment # RENAME
spec:
  selector: # Define the wrapping strategy
    matchLabels: # Match all pods with the defined labels
      app: userprofile-api # Labels follow the `name: value` template
  template: # This is the template of the pod inside the deployment
    metadata:
      labels:
        app: userprofile-api # RENAME
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - image: registrykcu5316.azurecr.io/tripinsights/userprofile:1.0 # RENAME
<<<<<<< HEAD
          name: userprofile # RENAME
=======
          name: userprofile # RENAME
>>>>>>> 64825c5e2a9d872da1e0274364c567b78dc0bd7c
          env:
            - name: SQL_USER
              valueFrom:
                secretKeyRef:
                  name: sql-secrets
                  key: username
            - name: SQL_SERVER
              value: sqlserverkcu5316.database.windows.net
            - name: SQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sql-secrets
                  key: password
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 250m
              memory: 256Mi
          ports:
            - containerPort: 80
              name: http
---
apiVersion: v1
kind: Service
metadata:
  name: userprofile-service # RENAME
spec:
<<<<<<< HEAD
  type: ClusterIP
=======
  type: ClusterIP
>>>>>>> 64825c5e2a9d872da1e0274364c567b78dc0bd7c
  ports:
  - port: 80
  selector:
    app: userprofile-api # RENAME